import React, { useState, useEffect, useRef } from 'react';

const TestimonialsPage = () => {
  const [currentTestimonial, setCurrentTestimonial] = useState(0);
  const [isAutoPlaying, setIsAutoPlaying] = useState(true);
  const testimonialsRef = useRef(null);

  const testimonials = [
    {
      id: 1,
      author: "–ö–ª. –î–∞—Ä—å—è –ï—Å—Å–µ–Ω—Ç—É–∫–∏",
      text: "–ü–æ–ª—É—á–∏–ª–∏ —Ç–æ–≤–∞—Ä, –∫–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ, –±—É–¥–µ–º –∏ –¥–∞–ª—å—à–µ —Å –≤–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å, –±–æ–ª—å—à–æ–µ —Å–ø–∞—Å–∏–±–æ",
      time: "14:54",
      theme: "dark",
      avatar: "üë©‚Äçüíº"
    },
    {
      id: 2,
      author: "–¢–∞—Ç—å—è–Ω–∞ –ü–µ—Ä–º—å",
      text: "–î–µ–≤–æ—á–∫–∏ –ø—Ä–∏–≤–µ—Ç\n–¢–æ–≤–∞—Ä –ø—Ä–∏—à—ë–ª —Å—É–ø–µ—Ä üëçüëçüëçüëç\n–ò –±—ã—Å—Ç—Ä–æ üëç\n–ù–∞ —Å–ª–µ–¥—É—é—â–µ–π –Ω–µ–¥–µ–ª–µ –º–æ–∂–µ—Ç —É–¥–∞—Å—Ç—Å—è –Ω–∞–º –∫—É—Ä—Ç–∫–∏ —ç—Ç–∏ –≤–∑—è—Ç—å, –µ—Å–ª–∏ –±—É–¥—É—Ç –µ—â—ë)))\n–°–ø–∞—Å–∏–±–æ –≤–∞–º –∑–∞ —Ä–∞–±–æ—Ç—É! üíêüíêüíê",
      time: "16:29",
      theme: "light",
      avatar: "üë©‚Äçüéì"
    },
    {
      id: 3,
      author: "–ö–ª –õ—é–±–æ–≤—å –ü–µ—Ç—Ä–æ–ø–∞–≤–ª–æ–≤—Å–∫",
      text: "–î–µ–≤–æ—á–∫–∏, –¥–æ–±—Ä—ã–π –¥–µ–Ω—å!\n–°–ø–∞—Å–∏–±–æ –í–∞–º –∑–∞ —Ä–∞–±–æ—Ç—É. –°–µ–≥–æ–¥–Ω—è –ø–æ–ª—É—á–∏–ª–∞ —Ç–æ–≤–∞—Ä, –æ—Ç–ª–∏—á–Ω–æ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞!\n–û—Ç–¥–µ–ª—å–Ω–∞—è –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –¢–∞—Ö–º–∏–Ω–µ üåπüåπüòçüëè",
      time: "17:09",
      theme: "dark",
      avatar: "üë©‚Äç‚ù§Ô∏è‚Äçüë®"
    },
    {
      id: 4,
      author: "–ê–Ω–æ–Ω–∏–º–Ω—ã–π –∫–ª–∏–µ–Ω—Ç",
      text: "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π, —Ç–æ–≤–∞—Ä –≤—á–µ—Ä–∞ –ø–æ–ª—É—á–∏–ª–∞ üëç –≤—Å–µ —Å—É–ø–µ—Ä. –£–∂–µ —É—Å–ø–µ–ª–∞ –ø—Ä–æ–¥–∞—Ç—å) —Å–ø–∞—Å–∏–±–æ –±–æ–ª—å—à–æ–µ üåπ\n–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ üòä",
      time: "15:59",
      theme: "light",
      avatar: "üôÇ"
    }
  ];

  // –ê–≤—Ç–æ–ø—Ä–æ–∫—Ä—É—Ç–∫–∞
  useEffect(() => {
    if (!isAutoPlaying) return;

    const interval = setInterval(() => {
      setCurrentTestimonial((prev) => (prev + 1) % testimonials.length);
    }, 4000);

    return () => clearInterval(interval);
  }, [isAutoPlaying, testimonials.length]);

  const nextTestimonial = () => {
    setCurrentTestimonial((prev) => (prev + 1) % testimonials.length);
  };

  const prevTestimonial = () => {
    setCurrentTestimonial((prev) => (prev - 1 + testimonials.length) % testimonials.length);
  };

  const goToTestimonial = (index) => {
    setCurrentTestimonial(index);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-white to-pink-50 py-12 px-4 sm:px-6 lg:px-8">
      <div className="max-w-7xl mx-auto">
        {/* –í–µ—Ä—Ö–Ω—è—è —á–∞—Å—Ç—å */}
        <div className="text-center mb-16">
          <div className="relative">
            {/* –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <h1 className="text-4xl md:text-6xl font-black text-gray-900 mb-8 leading-tight">
              <span className="bg-gradient-to-r from-pink-500 to-purple-600 bg-clip-text text-transparent">
                ¬´–ö–∞—á–µ—Å—Ç–≤–æ –Ω–∞ –≤—ã—Å—à–µ–º —É—Ä–æ–≤–Ω–µ,
              </span>
              <br />
              <span className="text-gray-800">
                –±—É–¥–µ–º –∏ –¥–∞–ª—å—à–µ —Å –í–∞–º–∏ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–∞—Ç—å¬ª
              </span>
            </h1>
            
            {/* –ü–æ–¥–∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="flex justify-end mb-8">
              <div className="w-full md:w-2/3 lg:w-1/2">
                <p className="text-xl md:text-2xl text-pink-600 font-medium mb-6">
                  –í–æ—Ç —á—Ç–æ –ø–∏—à—É—Ç –Ω–∞—à–∏ –∫–ª–∏–µ–Ω—Ç—ã –ø–æ—Å–ª–µ –∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞ —Å –Ω–∞–º–∏
                </p>
                
                {/* –ö–Ω–æ–ø–∫–∞ */}
                <button
                  onClick={nextTestimonial}
                  onMouseEnter={() => setIsAutoPlaying(false)}
                  onMouseLeave={() => setIsAutoPlaying(true)}
                  className="bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white font-semibold py-4 px-8 rounded-2xl shadow-lg hover:shadow-xl transform hover:scale-105 transition-all duration-300"
                >
                  –õ–∏—Å—Ç–∞—Ç—å –æ—Ç–∑—ã–≤—ã ‚Üí
                </button>
              </div>
            </div>
          </div>
        </div>

        {/* –ù–∏–∂–Ω—è—è —á–∞—Å—Ç—å - –æ—Ç–∑—ã–≤—ã */}
        <div className="relative">
          {/* –û—Å–Ω–æ–≤–Ω–æ–π –æ—Ç–∑—ã–≤ */}
          <div className="grid grid-cols-1 lg:grid-cols-4 gap-6 mb-8">
            {testimonials.map((testimonial, index) => (
              <div
                key={testimonial.id}
                className={`transform transition-all duration-500 ${
                  index === currentTestimonial
                    ? 'scale-105 opacity-100 z-10'
                    : 'scale-95 opacity-40'
                }`}
              >
                <div
                  className={`rounded-3xl p-6 shadow-2xl border-2 ${
                    testimonial.theme === 'dark'
                      ? 'bg-gray-900 text-white border-gray-700'
                      : 'bg-white text-gray-800 border-gray-200'
                  } transition-all duration-300 hover:shadow-2xl`}
                >
                  {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ */}
                  <div className={`flex items-center justify-between mb-4 pb-3 border-b ${
                    testimonial.theme === 'dark' ? 'border-gray-700' : 'border-gray-200'
                  }`}>
                    <div className="flex items-center space-x-3">
                      <div className="text-2xl">{testimonial.avatar}</div>
                      <div>
                        <div className="font-semibold">{testimonial.author}</div>
                        <div className={`text-sm ${
                          testimonial.theme === 'dark' ? 'text-pink-400' : 'text-pink-600'
                        }`}>
                          –æ–Ω–ª–∞–π–Ω
                        </div>
                      </div>
                    </div>
                    <div className={`text-sm ${
                      testimonial.theme === 'dark' ? 'text-gray-400' : 'text-gray-500'
                    }`}>
                      {testimonial.time}
                    </div>
                  </div>

                  {/* –°–æ–æ–±—â–µ–Ω–∏–µ */}
                  <div className="space-y-3">
                    {testimonial.text.split('\n').map((line, i) => (
                      <div
                        key={i}
                        className={`p-3 rounded-2xl max-w-xs ${
                          testimonial.theme === 'dark'
                            ? 'bg-gray-800 text-white'
                            : 'bg-gray-100 text-gray-700'
                        }`}
                      >
                        {line}
                      </div>
                    ))}
                  </div>

                  {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –Ω–∞–±–æ—Ä–∞ —Å–æ–æ–±—â–µ–Ω–∏—è */}
                  <div className={`flex items-center space-x-1 mt-4 ${
                    testimonial.theme === 'dark' ? 'text-gray-400' : 'text-gray-500'
                  }`}>
                    <div className="w-2 h-2 bg-current rounded-full animate-pulse"></div>
                    <div className="w-2 h-2 bg-current rounded-full animate-pulse" style={{ animationDelay: '0.2s' }}></div>
                    <div className="w-2 h-2 bg-current rounded-full animate-pulse" style={{ animationDelay: '0.4s' }}></div>
                    <span className="text-sm ml-2">–ø–µ—á–∞—Ç–∞–µ—Ç...</span>
                  </div>
                </div>
              </div>
            ))}
          </div>

          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è */}
          <div className="flex justify-center items-center space-x-4">
            <button
              onClick={prevTestimonial}
              className="p-3 rounded-full bg-white shadow-lg hover:shadow-xl transform hover:scale-110 transition-all duration-300 text-gray-700"
            >
              ‚Üê
            </button>
            
            {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã */}
            <div className="flex space-x-2">
              {testimonials.map((_, index) => (
                <button
                  key={index}
                  onClick={() => goToTestimonial(index)}
                  className={`w-3 h-3 rounded-full transition-all duration-300 ${
                    index === currentTestimonial
                      ? 'bg-pink-600 scale-125'
                      : 'bg-gray-300 hover:bg-gray-400'
                  }`}
                />
              ))}
            </div>
            
            <button
              onClick={nextTestimonial}
              className="p-3 rounded-full bg-white shadow-lg hover:shadow-xl transform hover:scale-110 transition-all duration-300 text-gray-700"
            >
              ‚Üí
            </button>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="mt-16 text-center">
          <div className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-2xl mx-auto">
            <div className="text-center">
              <div className="text-3xl font-bold text-pink-600">500+</div>
              <div className="text-gray-600">–¥–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-pink-600">98%</div>
              <div className="text-gray-600">–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤</div>
            </div>
            <div className="text-center">
              <div className="text-3xl font-bold text-pink-600">24/7</div>
              <div className="text-gray-600">–ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default TestimonialsPage;